events {
    worker_connections 1024;
}

http {
    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name typing-master.allenbenny.site www.typing-master.allenbenny.site;

        location / {
            return 301 https://typing-master.allenbenny.site$request_uri;
        }
    }

    # SSL Configuration for HTTPS
    server {
        listen 443 ssl;
        server_name typing-master.allenbenny.site www.typing-master.allenbenny.site;

        ssl_certificate /etc/letsencrypt/live/typing-master.allenbenny.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/typing-master.allenbenny.site/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Redirect www to non-www
        if ($host = 'www.typing-master.allenbenny.site') {
            return 301 https://typing-master.allenbenny.site$request_uri;
        }

        # Serve Frontend (Next.js)
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy API Requests to Backend
        location /api/ {
            proxy_pass http://backend:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket Support
        location /ws/ {
            proxy_pass http://backend:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
